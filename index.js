function hello() {
  var time = document.getElementById('time');
  var data = document.getElementById('data');
  let d = new Date();
  let monthA = '–Ø–Ω–≤–∞—Ä—è,–§–µ–≤—Ä–∞–ª—è,–ú–∞—Ä—Ç–∞,–ê–ø—Ä–µ–ª—è,–ú–∞—è,–ò—é–Ω—è,–ò—é–ª—è, –ê–≤–≥—É—Å—Ç–∞,–°–µ–Ω—Ç—è–±—Ä—è,–û–∫—Ç—è–±—Ä—è,–ù–æ—è–±—Ä—è,–î–µ–∫–∞–±—Ä—è'.split(',');
  let massage;
  if (new Date().getHours() >= 5 && new Date().getHours() < 10) {
    massage = " –î–æ–±—Ä–æ–µ —É—Ç—Ä–æ ";
  } else if (new Date().getHours() >= 10 && new Date().getHours() < 17) {
    massage = " –î–æ–±—Ä—ã–π –¥–µ–Ω—å ";
  } else if (new Date().getHours() >= 17 && new Date().getHours() < 23) {
    massage = " –î–æ–±—Ä—ã–π –≤–µ—á–µ—Ä ";
  } else {
    massage = " –î–æ–±—Ä–æ–π –Ω–æ—á–∏ ";
    let img = document.getElementById('headimg');
    img.style = "display:inline;";
  }

  let timerId = setTimeout(function tick() {
    if (new Date().getMinutes() < 10) {
      time.innerHTML = (`–í—Ä–µ–º—è  ${new Date().getHours()} 
    : 0${new Date().getMinutes()}<br> ${massage}!`);
    } else {
      time.innerHTML = (`–í—Ä–µ–º—è  ${new Date().getHours()} 
    : ${new Date().getMinutes()} <br> ${massage}!`);
    }
    timerId = setTimeout(tick, 6000);
  }, 0);
  data.innerHTML = (`${d.getDate()} ${monthA[d.getMonth()]} ${d.getFullYear()} –ì–æ–¥ `)
}
hello();

let addButton = document.getElementById('add');
let inputTask = document.getElementById('new-task');
let unfinishTask = document.getElementById('completed_tasks');
let finishTask = document.getElementById('tasks');

//–ø—É—Å—Ç–æ –∏–ª–∏ –Ω–µ—Ç
function listCont() {
  let h4 = document.getElementById('tasksh4');
  let hh4 = document.getElementById('completed_tasksh4');
  if (finishTask.children.length > 1) {
    h4.style = "display:none;";
  } else {
    h4.style = "display:block;";
  }
  if (unfinishTask.children.length > 1) {
    hh4.style = "display:none;";
  } else {
    hh4.style = "display:block;";
  }
}

function createElement(task) {
  let listElement = document.createElement('li');
  let checkbox = document.createElement('input');
  checkbox.type = "checkbox";
  let label = document.createElement("label");
  label.innerText = task;
  let editInput = document.createElement("input");
  editInput.type = "text";
  let editButton = document.createElement("button");
  editButton.className = "edit";
  let deleteButton = document.createElement("button");
  deleteButton.className = "delete";

  editButton.innerHTML = "‚úé";
  deleteButton.innerHTML = "‚úñ";

  listElement.appendChild(checkbox);
  listElement.appendChild(label);
  listElement.appendChild(editInput);
  listElement.appendChild(editButton);
  listElement.appendChild(deleteButton);
  return listElement;
}

function addTask() {
  if (inputTask.value) {
    let listElement = createElement(inputTask.value);
    // –¥–æ–±–∞–≤–ª—è–µ–º –∑–∞–¥–∞–Ω–∏–µ –∫ —Å–ø–∏—Å–∫—É –¥–µ–ª
    unfinishTask.appendChild(listElement);
    //–æ–±–Ω—É–ª–∏–º –∑–Ω–∞—á–µ–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏
    bindTask(listElement, finishTasks);
    inputTask.value = "";
  }
  listCont();
  save();
}
//–ø—Ä–∏–∫—Ä–µ–ø–∏–º –º–µ—Ç–æ–¥ –∫ –∫–Ω–æ–ø–∫–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∑–∞–¥–∞–Ω–∏—è
addButton.onclick = addTask;
//—É–¥–∞–ª–µ–Ω–∏–µ
function deleteTask() {
  //–æ–±—Ä–∞—â–∞–µ–º—Å—è –∫ —ç–ª–µ–º–µ–Ω—Ç—É li
  let listItems = this.parentNode;
  let ul = listItems.parentNode;
  ul.removeChild(listItems);
  listCont();
  save();
}
//–∏–∑–º–µ–Ω–µ–Ω–∏–µ
function editTask() {
  let editButton = this;
  let listItems = this.parentNode;
  let label = listItems.querySelector('label');
  let input = listItems.querySelector('input[type=text]');
  let containsClass = listItems.classList.contains("editMode");

  if (containsClass) {
    input.style = 'display:none;';
    label.innerText = input.value;
    editButton.className = "edit";
    editButton.innerHTML = "‚úé";
    save();
  } else {
    input.style = "display:block;";
    input.value = label.innerText;
    editButton.className = "edit";
    editButton.innerHTML = "üó∏";
  }
  listItems.classList.toggle("editMode");
}
//–Ω–∞–∂–∏—Ç–µ –Ω–∞ checkbox –¥–ª—è –∑–≤–∞–µ—Ä—à–µ–Ω–∏—è –∑–∞–¥–∞–Ω–∏—è
function finishTasks() {
  let listItems = this.parentNode;
  let checkbox = listItems.querySelector("input[type=checkbox]");
  finishTask.appendChild(listItems);
  bindTask(listItems, unfinishTasks);
  listCont();
  save();
}

//–≤–µ—Ä–Ω—É—Ç—å –∑–∞–¥–∞—á—É –ø—Ä–∏ –ø–æ–º–æ—â–∏ checkbox
function unfinishTasks() {
  let listItems = this.parentNode;
  let checkbox = listItems.querySelector("input[type=checkbox]");
  unfinishTask.appendChild(listItems);
  bindTask(listItems, finishTasks);
  listCont();
  save();
}
// —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–∏–≤—è–∑–∫–∏ –º–µ—Ç–æ–¥–∞ –∫ –Ω–æ–≤–æ–º—É —ç–ª–µ–º–µ–Ω—Ç—É –≤–æ –≤—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è
function bindTask(listElement, checkboxElem) {
  let checkbox = listElement.querySelector("input[type=checkbox]");
  let editButton = listElement.querySelector("button.edit");
  let deleteButton = listElement.querySelector("button.delete");

  checkbox.onclick = checkboxElem;
  editButton.onclick = editTask;
  deleteButton.onclick = deleteTask;
}

//—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∑–∞–¥–∞—á–∏
function save() {
  // –¥–∞–Ω–Ω—ã–µ —Ö—Ä–∞–Ω–∏–º –Ω–∞ –ª–æ–∫–∞–ª—å–Ω–æ–º —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –¥–∞–Ω–Ω—ã—Ö –≤ –±—Ä–∞—É–∑–µ—Ä–µ
  let unfinishTaskArr = [];
  let finishTaskArr = [];

  for (let i = 1; i < unfinishTask.children.length; i++) {
    unfinishTaskArr.push(unfinishTask.children[i].getElementsByTagName('label')[0].innerText);
  }

  for (let i = 1; i < finishTask.children.length; i++) {
    finishTaskArr.push(finishTask.children[i].getElementsByTagName('label')[0].innerText);
  }
  localStorage.removeItem('todo');
  localStorage.setItem('todo', JSON.stringify({ unfinishTask: unfinishTaskArr, finishTask: finishTaskArr }));
}

//–∑–∞–≥—Ä—É–∑–∫–∞
function load(){
  return JSON.parse(localStorage.getItem('todo'));
}

let data=load();
for(let i = 0; i< data.unfinishTask.length;i++){
  let listItems = createElement(data.unfinishTask[i],false);
  unfinishTask.appendChild(listItems);
  bindTask(listItems,finishTasks);
  listCont();
}
for(let i = 0; i< data.finishTask.length;i++){
  let listItems = createElement(data.finishTask[i],true);
  finishTask.appendChild(listItems);
  bindTask(listItems,unfinishTasks);
  listCont();
}